ignore = {
    "213",
    "212/self",
    "4..", --Shadowing
    "631", --Too long lines
}

stds.optionals = {
    read_globals = {
        "E2Lib",
        "CAMI",
    }
}

stds.wuma = {
    globals = {
        "WUMADebug",
        "WUMALog",
        "WUMARPC",
        "LoadoutWeapon",
        "Restriction",
        "Limit",
        "TableAccessorFunc",
        WUMA = {
            fields = {
                "TopologicalSort",
                "Usergroups",
                "Initialize",
                "IncludeFolder",
                "IsSteamID",
                "OnUsergroupRegistered",
                "OnUsergroupUnregistered",
                "CalculateServerTimeDifference",
                "GetServerTime",
                "NotifyTypeRestriction",
                "NotifyRestriction",
                "NotifyLimitHit",
                "OnSubscriptionUpdate",
                "OnSubscriptionDeletion",
                "Subscribe",
                "OnRestrictionsUpdate",
                "OnLimitsUpdate",
                "OnLoadoutsUpdate",
                "OnSettingsUpdate",
                "OnUsergroupUpdate",
                "OnInheritanceUpdate",
                "OnMapsUpdate",
                "FlushSubscriptions",
                "HasCreatedFonts",
                "OnTabChange",
                "Unsubscribe",
                "RestrictionTypes",
                "GetAllLimits",
                "GetWeapons",
                "GenerateUniqueID",
                "OnLookupUpdate",
                "OnOnlineUpdate",
                "GetServerTimeOffset",
                RestrictionTypes = {
                    field = {
                        "entity",
                        "prop",
                        "npc",
                        "vehicle",
                        "swep",
                        "pickup",
                        "effect",
                        "tool",
                        "ragdoll",
                        "property",
                        "physgrab",
                        "use",
                    }
                },
                RPC = {
                    fields = {
                        "Subscribe",
                        "Unsubscribe",
                        "Restrict",
                        "RestrictUser",
                        "Unrestrict",
                        "UnrestrictUser",
                        "RestrictType",
                        "RestrictUserType",
                        "SetRestrictionsWhitelist",
                        "SetUserRestrictionsWhitelist",
                        "SetLimit",
                        "SetUserLimit",
                        "UnsetLimit",
                        "UnsetUserLimit",
                        "AddLoadout",
                        "AddUserLoadout",
                        "RemoveLoadout",
                        "RemoveUserLoadout",
                        "SetPrimaryWeapon",
                        "SetUserPrimaryWeapon",
                        "SetEnforceLoadout",
                        "SetUserEnforceLoadout",
                        "ChangeSettings",
                        "ChangeInheritance",
                        "AddPersonalLoadout",
                        "RemovePersonalLoadout",
                        "SetPersonalPrimaryWeapon",
                        "CopyPlayerLoadout",
                        "SetLoadoutIgnoreRestrictions",
                        "FlushSubscriptions",
                        "SetUserLoadoutIgnoreRestrictions",
                        "UserCopyPlayerLoadout",
                        "Lookup",
                    }
                },
                GUI = {
                    fields = {
                        "Initialize",
                        "Base",
                        "ActiveTab",
                        "PropertySheet",
                        "SettingsTab",
                        "RestrictionsTab",
                        "LimitsTab",
                        "LoadoutsTab",
                        "UsersTab",
                        "Show",
                        "Hide",
                        "Toggle",
                        "CreateLoadoutSelector",
                        "InitializeSettingsTab",
                        "OnUserTabChange",
                        "InitializeRestrictionsTab",
                        "OnUserTabChange",
                        "InitializeLimitsTab",
                        "InitializeLoadoutTab",
                        "InitializeUsersTab",
                        "InitializeUserRestrictionsTab",
                        "InitializeUserLimitsTab",
                        "InitializeUserLoadoutsTab",
                    }
                }
            }
        }
    }
}

stds.gmod = {
    read_globals = {
        achievements = {
            fields = {
                "GetName",
                "Count",
                "GetGoal",
                "GetDesc",
                "GetCount",
                "IsAchieved",
            }
        },
        ai = {
            fields = {
                "GetScheduleID",
                "GetTaskID",
            }
        },
        ai_schedule = {
            fields = {
                "New",
            }
        },
        baseclass = {
            fields = {
                "Set",
                "Get",
            }
        },
        bit = {
            fields = {
                "bnot",
                "tohex",
                "bswap",
                "lshift",
                "band",
                "bxor",
                "ror",
                "rshift",
                "rol",
                "arshift",
                "bor",
                "tobit",
            }
        },
        cam = {
            fields = {
                "End3D2D",
                "IgnoreZ",
                "StartOrthoView",
                "PopModelMatrix",
                "ApplyShake",
                "GetModelMatrix",
                "EndOrthoView",
                "Start3D2D",
                "End2D",
                "Start3D",
                "PushModelMatrix",
                "Start",
                "End3D",
                "Start2D",
                "End",
            }
        },
        chat = {
            fields = {
                "AddText",
                "Open",
                "Close",
                "GetChatBoxPos",
                "GetChatBoxSize",
                "PlaySound",
            }
        },
        cleanup = {
            fields = {
                "GetList",
                "GetTable",
                "Register",
                "UpdateUI",
                "Add",
                "ReplaceEntity",
            }
        },
        concommand = {
            fields = {
                "GetTable",
                "Remove",
                "Add",
            }
        },
        constraint = {
            fields = {
                "RemoveAll",
                "Winch",
                "GetAllConstrainedEntities",
                "Ballsocket",
                "Muscle",
                "Slider",
                "CanConstrain",
                "AdvBallsocket",
                "CreateKeyframeRope",
                "Hydraulic",
                "FindConstraint",
                "Elastic",
                "ForgetConstraints",
                "AddConstraintTableNoDelete",
                "AddConstraintTable",
                "Keepupright",
                "Find",
                "NoCollide",
                "RemoveConstraints",
                "Pulley",
                "Motor",
                "GetTable",
                "HasConstraints",
                "FindConstraints",
                "Rope",
                "FindConstraintEntity",
                "Axis",
                "Weld",
                "CreateStaticAnchorPoint",
            }
        },
        construct = {
            fields = {
                "Magnet",
                "SetPhysProp",
            }
        },
        controlpanel = {
            fields = {
                "Clear",
                "Get",
            }
        },
        cookie = {
            fields = {
                "GetNumber",
                "GetString",
                "Set",
                "Delete",
            }
        },
        coroutine = {
            fields = {
                "status",
                "create",
                "wrap",
                "wait",
                "resume",
                "running",
                "yield",
            }
        },
        cvars = {
            fields = {
                "GetConVarCallbacks",
                "RemoveChangeCallback",
                "AddChangeCallback",
                "String",
                "Number",
                "Bool",
            }
        },
        debug = {
            fields = {
                "getinfo",
                "setupvalue",
                "sethook",
                "traceback",
                "Trace",
                "getlocal",
                "getfenv",
                "debug",
                "setlocal",
                "gethook",
                "upvaluejoin",
                "setfenv",
                "upvalueid",
                "setmetatable",
                "getupvalue",
                "getmetatable",
                "getregistry",
            }
        },
        debugoverlay = {
            fields = {
                "Triangle",
                "Box",
                "Sphere",
                "BoxAngles",
                "Axis",
                "ScreenText",
                "Line",
                "Cross",
                "Grid",
                "SweptBox",
                "EntityTextAtPosition",
                "Text",
            }
        },
        derma = {
            fields = {
                "RefreshSkins",
                "SkinHook",
                "SkinChangeIndex",
                "GetControlList",
                "DefineSkin",
                "GetNamedSkin",
                "Color",
                "DefineControl",
                "GetDefaultSkin",
                "SkinTexture",
                "GetSkinTable",
            }
        },
        dragndrop = {
            fields = {
                "Clear",
                "GetDroppable",
                "HandleDroppedInGame",
                "StopDragging",
                "IsDragging",
            }
        },
        draw = {
            fields = {
                "GetFontHeight",
                "NoTexture",
                "DrawText",
                "TextShadow",
                "WordBox",
                "SimpleText",
                "TexturedQuad",
                "RoundedBox",
                "RoundedBoxEx",
                "SimpleTextOutlined",
                "Text",
            }
        },
        drive = {
            fields = {
                "PlayerStartDriving",
                "PlayerStopDriving",
                "Register",
                "Start",
                "End",
            }
        },
        duplicator = {
            fields = {
                "SetLocalPos",
                "DoBoneManipulator",
                "DoGenericPhysics",
                "RegisterEntityModifier",
                "RegisterBoneModifier",
                "CopyEnts",
                "SetLocalAng",
                "Allow",
                "RemoveMapCreatedEntities",
                "DoGeneric",
                "FindEntityClass",
                "ClearEntityModifier",
                "WorkoutSize",
                "ApplyEntityModifiers",
                "DoFlex",
                "Copy",
                "RegisterConstraint",
                "StoreEntityModifier",
                "StoreBoneModifier",
                "IsAllowed",
                "Paste",
                "RegisterEntityClass",
                "GenericDuplicatorFunction",
                "ApplyBoneModifiers",
                "CreateEntityFromTable",
                "CopyEntTable",
            }
        },
        engine = {
            fields = {
                "GetDemoPlaybackTotalTicks",
                "CloseServer",
                "WriteDupe",
                "ServerFrameTime",
                "GetDemoPlaybackStartTick",
                "TickInterval",
                "GetDemoPlaybackTimeScale",
                "GetGamemodes",
                "IsRecordingDemo",
                "TickCount",
                "GetDemoPlaybackTick",
                "VideoSettings",
                "WriteSave",
                "LightStyle",
                "IsPlayingDemo",
                "OpenDupe",
                "GetGames",
                "SetMounted",
                "ActiveGamemode",
                "GetAddons",
            }
        },
        ents = {
            fields = {
                "GetMapCreatedEntity",
                "FindAlongRay",
                "CreateClientProp",
                "FindByClassAndParent",
                "FindInCone",
                "CreateClientside",
                "FindByName",
                "FindInBox",
                "GetAll",
                "GetByIndex",
                "GetEdictCount",
                "FindInPVS",
                "FindByClass",
                "GetCount",
                "FindByModel",
                "FindInSphere",
                "Create",
                "FireTargets",
            }
        },
        file = {
            fields = {
                "Open",
                "Read",
                "Find",
                "Exists",
                "Write",
                "IsDir",
                "Time",
                "CreateDir",
                "Size",
                "Append",
                "Rename",
                "Delete",
            }
        },
        frame_blend = {
            fields = {
                "ShouldSkipFrame",
                "IsActive",
            }
        },
        game = {
            fields = {
                "GetAmmoMax",
                "CleanUpMap",
                "GetWorld",
                "GetAmmoDamageType",
                "AddAmmoType",
                "GetMap",
                "MaxPlayers",
                "LoadNextMap",
                "GetSkillLevel",
                "GetAmmoPlayerDamage",
                "SinglePlayer",
                "GetAmmoName",
                "GetAmmoID",
                "GetTimeScale",
                "RemoveRagdolls",
                "GetAmmoTypes",
                "GetAmmoForce",
                "GetGlobalState",
                "AddParticles",
                "AddDecal",
                "GetAmmoData",
                "SetGlobalState",
                "ConsoleCommand",
                "GetMapVersion",
                "SetGlobalCounter",
                "GetAmmoNPCDamage",
                "GetGlobalCounter",
                "SetTimeScale",
                "IsDedicated",
                "MapLoadType",
                "KickID",
                "StartSpot",
                "GetIPAddress",
                "MountGMA",
                "SetSkillLevel",
                "GetMapNext",
            }
        },
        gameevent = {
            fields = {
                "Listen",
            }
        },
        gamemode = {
            fields = {
                "Call",
            }
        },
        gmod = {
            fields = {
                "GetGamemode",
            }
        },
        gmsave = {
            fields = {
                "PlayerLoad",
                "SaveMap",
                "ShouldSaveEntity",
                "PlayerSave",
                "LoadMap",
            }
        },
        gui = {
            fields = {
                "IsGameUIVisible",
                "MouseY",
                "InternalKeyCodeReleased",
                "InternalMouseDoublePressed",
                "IsConsoleVisible",
                "ShowConsole",
                "InternalMouseReleased",
                "MouseX",
                "InternalMousePressed",
                "HideGameUI",
                "ScreenToVector",
                "InternalKeyTyped",
                "EnableScreenClicker",
                "InternalMouseWheeled",
                "InternalKeyCodePressed",
                "InternalKeyCodeTyped",
                "InternalCursorMoved",
                "ActivateGameUI",
                "OpenURL",
            }
        },
        GWEN = {
            fields = {
                "CreateTextureNormal",
                "TextureColor",
                "CreateTextureCentered",
                "CreateTextureBorder",
            }
        },
        halo = {
            fields = {
                "RenderedEntity",
                "Add",
            }
        },
        hammer = {
            fields = {
                "SendCommand",
            }
        },
        hook = {
            fields = {
                "GetTable",
                "Run",
                "Add",
                "Remove",
                "Call",
            }
        },
        http = {
            fields = {
                "Fetch",
                "Post",
            }
        },
        input = {
            fields = {
                "GetCursorPos",
                "IsShiftDown",
                "IsKeyDown",
                "CheckKeyTrapping",
                "StartKeyTrapping",
                "WasMousePressed",
                "SelectWeapon",
                "LookupBinding",
                "IsKeyTrapping",
                "WasKeyReleased",
                "WasKeyTyped",
                "IsButtonDown",
                "GetKeyCode",
                "IsMouseDown",
                "WasMouseReleased",
                "WasMouseDoublePressed",
                "WasKeyPressed",
                "SetCursorPos",
                "IsControlDown",
                "GetKeyName",
                "LookupKeyBinding",
            }
        },
        jit = {
            fields = {
                "attach",
                "status",
                "off",
                "on",
                "flush",
                "opt",
                "util",
            }
        },
        killicon = {
            fields = {
                "Draw",
                "AddFont",
                "AddAlias",
                "GetSize",
                "Add",
                "Exists",
            }
        },
        language = {
            fields = {
                "GetPhrase",
                "Add",
            }
        },
        list = {
            fields = {
                "Contains",
                "Get",
                "GetForEdit",
                "Set",
                "Add",
                "HasEntry",
            }
        },
        markup = {
            fields = {
                "Parse",
            }
        },
        math = {
            fields = {
                "randomseed",
                "cos",
                "ceil",
                "cosh",
                "random",
                "frexp",
                "exp",
                "pow",
                "asin",
                "sqrt",
                "atan2",
                "BinToInt",
                "AngleDifference",
                "max",
                "Rand",
                "TimeFraction",
                "tan",
                "Approach",
                "ApproachAngle",
                "Distance",
                "floor",
                "NormalizeAngle",
                "IntToBin",
                "sinh",
                "sin",
                "min",
                "Clamp",
                "BSplinePoint",
                "ldexp",
                "acos",
                "Remap",
                "log10",
                "Round",
                "Truncate",
                "EaseInOut",
                "atan",
                "deg",
                "rad",
                "log",
                "modf",
                "tanh",
                "abs",
                "fmod",
            }
        },
        matproxy = {
            fields = {
                "ShouldOverrideProxy",
                "Call",
                "Init",
                "Add",
            }
        },
        menu = {
            fields = {
                "RecordFrame",
            }
        },
        menubar = {
            fields = {
                "IsParent",
                "Init",
                "ParentTo",
            }
        },
        mesh = {
            fields = {
                "TangentT",
                "AdvanceVertex",
                "Quad",
                "Begin",
                "UserData",
                "Specular",
                "Position",
                "TexCoord",
                "Color",
                "VertexCount",
                "QuadEasy",
                "TangentS",
                "Normal",
                "End",
            }
        },
        motionsensor = {
            fields = {
                "ProcessAnglesTable",
                "IsAvailable",
                "ProcessPositionTable",
                "Stop",
                "BuildSkeleton",
                "GetColourMaterial",
                "IsActive",
                "GetSkeleton",
                "ProcessAngle",
                "Start",
                "ChooseBuilderFromEntity",
            }
        },
        navmesh = {
            fields = {
                "GetNearestNavArea",
                "GetNavAreaCount",
                "GetNavAreaByID",
                "IsLoaded",
                "SetMarkedArea",
                "Reset",
                "SetPlayerSpawnName",
                "GetNavLadderByID",
                "ClearWalkableSeeds",
                "GetEditCursorPosition",
                "GetAllNavAreas",
                "GetMarkedArea",
                "AddWalkableSeed",
                "Find",
                "GetGroundHeight",
                "SetMarkedLadder",
                "GetMarkedLadder",
                "GetPlayerSpawnName",
                "IsGenerating",
                "Load",
                "BeginGeneration",
                "Save",
                "GetNavArea",
                "CreateNavArea",
            }
        },
        net = {
            fields = {
                "ReadEntity",
                "WriteColor",
                "ReadBit",
                "ReadFloat",
                "ReadTable",
                "WriteBit",
                "Receive",
                "WriteInt",
                "WriteFloat",
                "ReadBool",
                "BytesWritten",
                "SendOmit",
                "WriteBool",
                "Broadcast",
                "ReadDouble",
                "Start",
                "WriteTable",
                "SendPAS",
                "WriteData",
                "ReadMatrix",
                "ReadUInt",
                "WriteNormal",
                "WriteDouble",
                "ReadInt",
                "ReadNormal",
                "WriteMatrix",
                "BytesLeft",
                "WriteEntity",
                "ReadColor",
                "SendToServer",
                "ReadAngle",
                "ReadVector",
                "Send",
                "SendPVS",
                "WriteAngle",
                "ReadString",
                "WriteUInt",
                "ReadData",
                "WriteString",
                "WriteVector",
            }
        },
        notification = {
            fields = {
                "AddLegacy",
                "AddProgress",
                "Kill",
            }
        },
        numpad = {
            fields = {
                "OnUp",
                "Deactivate",
                "OnDown",
                "Register",
                "Toggle",
                "FromButton",
                "Remove",
                "Activate",
            }
        },
        os = {
            fields = {
                "date",
                "difftime",
                "clock",
                "time",
            }
        },
        package = {
            fields = {
                "seeall",
            }
        },
        physenv = {
            fields = {
                "AddSurfaceData",
                "GetPerformanceSettings",
                "SetGravity",
                "GetAirDensity",
                "SetPerformanceSettings",
                "GetGravity",
                "SetAirDensity",
            }
        },
        player = {
            fields = {
                "GetByAccountID",
                "GetBySteamID",
                "GetHumans",
                "GetBots",
                "GetByID",
                "GetByUniqueID",
                "GetAll",
                "GetBySteamID64",
                "GetCount",
                "CreateNextBot",
            }
        },
        player_manager = {
            fields = {
                "RunClass",
                "OnPlayerSpawn",
                "TranslateToPlayerModelName",
                "AddValidHands",
                "TranslatePlayerHands",
                "AddValidModel",
                "ClearPlayerClass",
                "TranslatePlayerModel",
                "RegisterClass",
                "AllValidModels",
                "GetPlayerClass",
                "SetPlayerClass",
            }
        },
        presets = {
            fields = {
                "GetTable",
                "Add",
                "Exists",
                "Remove",
                "Rename",
            }
        },
        properties = {
            fields = {
                "OnScreenClick",
                "Add",
                "OpenEntityMenu",
                "CanBeTargeted",
                "GetHovered",
            }
        },
        render = {
            fields = {
                "FogMode",
                "SetShadowDistance",
                "CapturePixels",
                "PopFilterMin",
                "SuppressEngineLighting",
                "ClearRenderTarget",
                "GetResolvedFullFrameDepth",
                "ClearBuffersObeyStencil",
                "GetSuperFPTex2",
                "GetBlend",
                "FogEnd",
                "GetFogDistances",
                "MaxTextureHeight",
                "GetRenderTarget",
                "SetFogZ",
                "GetSuperFPTex",
                "DrawSphere",
                "OverrideAlphaWriteEnable",
                "DrawBeam",
                "ModelMaterialOverride",
                "DepthRange",
                "SetShadowDirection",
                "SetColorModulation",
                "CopyRenderTargetToTexture",
                "SetLightingOrigin",
                "ClearStencil",
                "ComputeLighting",
                "CopyTexture",
                "PushFilterMin",
                "MaterialOverride",
                "DrawWireframeBox",
                "PushRenderTarget",
                "DrawWireframeSphere",
                "SetRenderTarget",
                "SetModelLighting",
                "PerformFullScreenStencilOperation",
                "SetShadowsDisabled",
                "GetFogMode",
                "GetDXLevel",
                "SupportsHDR",
                "UpdateScreenEffectTexture",
                "ClearStencilBufferRectangle",
                "StartBeam",
                "DrawScreenQuad",
                "BlurRenderTarget",
                "ComputeDynamicLighting",
                "SetGoalToneMappingScale",
                "DrawTextureToScreenRect",
                "GetSurfaceColor",
                "Capture",
                "OverrideColorWriteEnable",
                "OverrideDepthEnable",
                "SetWriteDepthToDestAlpha",
                "GetPowerOfTwoTexture",
                "SetLightingMode",
                "GetScreenEffectTexture",
                "BrushMaterialOverride",
                "SetBlend",
                "MaxTextureWidth",
                "SetAmbientLight",
                "SetStencilCompareFunction",
                "SetLocalModelLights",
                "OverrideBlend",
                "SetStencilEnable",
                "Model",
                "PopRenderTarget",
                "SetStencilPassOperation",
                "UpdateRefractTexture",
                "FogColor",
                "AddBeam",
                "ResetToneMappingScale",
                "ReadPixel",
                "SupportsPixelShaders 2 0",
                "CullMode",
                "SetColorMaterial",
                "TurnOnToneMapping",
                "SetLightmapTexture",
                "SetStencilWriteMask",
                "PopFilterMag",
                "SetScissorRect",
                "SetStencilZFailOperation",
                "DrawQuadEasy",
                "PopFlashlightMode",
                "SetViewPort",
                "Clear",
                "DrawTextureToScreen",
                "DrawSprite",
                "DrawBox",
                "GetFogColor",
                "PopCustomClipPlane",
                "GetAmbientLightColor",
                "UpdatePowerOfTwoTexture",
                "SetStencilReferenceValue",
                "EndBeam",
                "FogMaxDensity",
                "Spin",
                "DrawLine",
                "GetToneMappingScaleLinear",
                "SetMaterial",
                "EnableClipping",
                "GetFullScreenDepthTexture",
                "GetLightColor",
                "ClearDepth",
                "MaterialOverrideByIndex",
                "UpdateFullScreenDepthTexture",
                "DrawScreenQuadEx",
                "PushCustomClipPlane",
                "SetRenderTargetEx",
                "RedownloadAllLightmaps",
                "FogStart",
                "DrawQuad",
                "SupportsVertexShaders 2 0",
                "RenderView",
                "SetStencilFailOperation",
                "PushFlashlightMode",
                "RenderHUD",
                "ResetModelLighting",
                "GetRefractTexture",
                "SupportsPixelShaders 1 4",
                "PushFilterMag",
                "SetStencilTestMask",
                "GetColorModulation",
                "SetColorMaterialIgnoreZ",
                "SetShadowColor",
            }
        },
        resource = {
            fields = {
                "AddSingleFile",
                "AddWorkshop",
                "AddFile",
            }
        },
        saverestore = {
            fields = {
                "ReadVar",
                "WriteVar",
                "ReadTable",
                "LoadEntity",
                "SaveEntity",
                "AddSaveHook",
                "WriteTable",
                "AddRestoreHook",
                "WritableKeysInTable",
            }
        },
        scripted_ents = {
            fields = {
                "GetList",
                "GetType",
                "Get",
                "IsBasedOn",
                "Register",
                "GetMember",
                "Alias",
                "GetStored",
                "GetSpawnable",
            }
        },
        search = {
            fields = {
                "AddProvider",
                "GetResults",
            }
        },
        serverlist = {
            fields = {
                "PlayerList",
                "Query",
            }
        },
        sound = {
            fields = {
                "GetTable",
                "PlayURL",
                "PlayFile",
                "GetProperties",
                "Add",
                "Play",
                "AddSoundOverrides",
                "Generate",
            }
        },
        spawnmenu = {
            fields = {
                "AddContentType",
                "PopulateFromTextFiles",
                "GetToolMenu",
                "AddCreationTab",
                "CreateContentIcon",
                "GetCreationTabs",
                "AddToolCategory",
                "SetActiveControlPanel",
                "GetCustomPropTable",
                "ActivateToolPanel",
                "GetTools",
                "AddToolMenuOption",
                "GetPropTable",
                "AddToolTab",
                "AddPropCategory",
                "GetContentType",
                "ActivateTool",
                "ActiveControlPanel",
                "ClearToolMenus",
            }
        },
        sql = {
            fields = {
                "Query",
                "Begin",
                "TableExists",
                "QueryValue",
                "LastError",
                "Commit",
                "SQLStr",
                "QueryRow",
            }
        },
        steamworks = {
            fields = {
                "GetList",
                "ApplyAddons",
                "DownloadUGC",
                "FileInfo",
                "ViewFile",
                "SetFilePlayed",
                "ShouldMountAddon",
                "SetFileCompleted",
                "RequestPlayerInfo",
                "SetShouldMountAddon",
                "IsSubscribed",
                "OpenWorkshop",
            }
        },
        string = {
            fields = {
                "dump",
                "NiceSize",
                "GetFileFromFilename",
                "gsub",
                "FromColor",
                "Comma",
                "find",
                "Right",
                "char",
                "ToMinutesSeconds",
                "PatternSafe",
                "rep",
                "format",
                "SetChar",
                "Explode",
                "GetExtensionFromFilename",
                "Trim",
                "TrimRight",
                "StripExtension",
                "GetPathFromFilename",
                "gmatch",
                "Replace",
                "JavascriptSafe",
                "lower",
                "ToTable",
                "ToMinutesSecondsMilliseconds",
                "NiceTime",
                "match",
                "StartWith",
                "byte",
                "len",
                "sub",
                "TrimLeft",
                "Left",
                "EndsWith",
                "upper",
                "ToColor",
                "FormattedTime",
                "Split",
                "reverse",
            }
        },
        surface = {
            fields = {
                "GetTextColor",
                "DrawLine",
                "DrawRect",
                "CreateFont",
                "DrawTexturedRectUV",
                "GetTextureSize",
                "SetDrawColor",
                "DrawOutlinedRect",
                "SetMaterial",
                "DrawTexturedRect",
                "GetDrawColor",
                "SetTexture",
                "DrawPoly",
                "DrawText",
                "DrawTexturedRectRotated",
                "GetHUDTexture",
                "GetTextSize",
                "PlaySound",
                "SetTextColor",
                "DrawCircle",
                "SetAlphaMultiplier",
                "GetTextureID",
                "SetFont",
                "DisableClipping",
                "SetTextPos",
                "GetAlphaMultiplier",
            }
        },
        system = {
            fields = {
                "AppTime",
                "IsLinux",
                "IsOSX",
                "IsWindowed",
                "IsWindows",
                "BatteryPower",
                "GetCountry",
                "UpTime",
                "FlashWindow",
                "SteamTime",
                "HasFocus",
            }
        },
        table = {
            fields = {
                "Merge",
                "ClearKeys",
                "Reverse",
                "Sanitise",
                "LowerKeyNames",
                "RemoveByValue",
                "Empty",
                "SortByMember",
                "remove",
                "ToString",
                "KeysFromValue",
                "Random",
                "ForceInsert",
                "Copy",
                "SortByKey",
                "CollapseKeyValue",
                "maxn",
                "Inherit",
                "sort",
                "concat",
                "IsSequential",
                "IsEmpty",
                "insert",
                "Count",
                "Add",
                "CopyFromTo",
                "HasValue",
                "KeyFromValue",
                "SortDesc",
                "GetKeys",
                "GetWinningKey",
                "DeSanitise",
            }
        },
        team = {
            fields = {
                "GetAllTeams",
                "SetSpawnPoint",
                "Joinable",
                "AddScore",
                "BestAutoJoinTeam",
                "TotalFrags",
                "SetColor",
                "SetUp",
                "GetSpawnPoints",
                "GetColor",
                "Valid",
                "GetName",
                "GetScore",
                "GetPlayers",
                "SetClass",
                "TotalDeaths",
                "SetScore",
                "GetClass",
                "NumPlayers",
                "GetSpawnPoint",
            }
        },
        timer = {
            fields = {
                "Simple",
                "Stop",
                "UnPause",
                "Remove",
                "TimeLeft",
                "Exists",
                "Adjust",
                "Pause",
                "RepsLeft",
                "Toggle",
                "Create",
                "Start",
            }
        },
        umsg = {
            fields = {
                "VectorNormal",
                "Angle",
                "Float",
                "Short",
                "String",
                "Entity",
                "Vector",
                "Long",
                "Bool",
                "End",
                "Char",
            }
        },
        undo = {
            fields = {
                "GetTable",
                "Do Undo",
                "Finish",
                "SetPlayer",
                "AddEntity",
                "ReplaceEntity",
                "AddFunction",
                "Create",
                "SetCustomUndoText",
            }
        },
        usermessage = {
            fields = {
                "GetTable",
                "IncomingMessage",
            }
        },
        utf8 = {
            fields = {
                "offset",
                "force",
                "codes",
                "codepoint",
                "len",
                "char",
            }
        },
        util = {
            fields = {
                "Compress",
                "RelativePathToFull",
                "SharedRandom",
                "PointContents",
                "TimerCycle",
                "ParticleTracer",
                "LocalToWorld",
                "QuickTrace",
                "Decal",
                "ScreenShake",
                "PrecacheModel",
                "GetSunInfo",
                "Effect",
                "BlastDamage",
                "DateStamp",
                "GetPixelVisibleHandle",
                "GetUserGroups",
                "IsValidProp",
                "CRC",
                "TraceHull",
                "IsInWorld",
                "AddNetworkString",
                "SteamIDTo64",
                "IntersectRayWithOBB",
                "PrecacheSound",
                "Stack",
                "IsSkyboxVisibleFromPoint",
                "Timer",
                "GetSurfaceIndex",
                "DistanceToLine",
                "RemovePData",
                "IntersectRayWithPlane",
                "JSONToTable",
                "TypeToString",
                "IsValidPhysicsObject",
                "SpriteTrail",
                "PixelVisible",
                "IsValidRagdoll",
                "GetModelInfo",
                "NetworkIDToString",
                "TableToKeyValues",
                "DecalEx",
                "KeyValuesToTablePreserveOrder",
                "DecalMaterial",
                "SteamIDFrom64",
                "IsValidModel",
                "KeyValuesToTable",
                "TraceLine",
                "NetworkStringToID",
                "BlastDamageInfo",
                "ParticleTracerEx",
                "TableToJSON",
                "GetPData",
                "Decompress",
                "AimVector",
                "GetModelMeshes",
                "Base64Encode",
                "GetSurfaceData",
                "NiceFloat",
                "StringToType",
                "IsModelLoaded",
                "TraceEntity",
                "GetPlayerTrace",
                "GetSurfacePropName",
                "SetPData",
            }
        },
        vgui = {
            fields = {
                "GetHoveredPanel",
                "GetKeyboardFocus",
                "Register",
                "GetWorldPanel",
                "FocusedHasParent",
                "RegisterFile",
                "RegisterTable",
                "CursorVisible",
                "IsHoveringWorld",
                "Create",
                "GetControlTable",
                "CreateFromTable",
            }
        },
        video = {
            fields = {
                "Record",
            }
        },
        weapons = {
            fields = {
                "GetList",
                "Get",
                "IsBasedOn",
                "Register",
                "GetStored",
            }
        },
        widgets = {
            fields = {
                "RenderMe",
            }
        },
        "AddCSLuaFile",
        "Angle",
        "AccessorFunc",
        "AngleRand",
        "Add_NPC_Class",
        "AddOriginToPVS",
        "AddonMaterial",
        "AddWorldTip",
        "AddBackgroundImage",
        "BroadcastLua",
        "assert",
        "ClientsideModel",
        "BuildNetworkedVarsTable",
        "ChangeTooltip",
        "ClientsideRagdoll",
        "ClearBackgroundImages",
        "ChangeBackground",
        "CancelLoading",
        "Color",
        "ColorToHSV",
        "ColorAlpha",
        "CompileFile",
        "CompileString",
        "ClientsideScene",
        "collectgarbage",
        "CloseDermaMenus",
        "ColorRand",
        "ColorToHSL",
        "CreateClientConVar",
        "CreateSound",
        "CreateMaterial",
        "ConVarExists",
        "CreateConVar",
        "CreateSprite",
        "ConsoleAutoComplete",
        "CreateParticleSystem",
        "CreatePhysCollideBox",
        "CreatePhysCollidesFromModel",
        "DamageInfo",
        "CurTime",
        "Derma_Message",
        "DeriveGamemode",
        "Derma_Anim",
        "Derma_DrawBackgroundBlur",
        "Derma_Hook",
        "Derma_Install_Convar_Functions",
        "DebugInfo",
        "Derma_StringRequest",
        "DermaMenu",
        "DrawBloom",
        "DrawColorModify",
        "DOFModeHack",
        "DOF_Kill",
        "DOF_Start",
        "Derma_Query",
        "DisableClipping",
        "EffectData",
        "DynamicLight",
        "DropEntityIfHeld",
        "DrawMaterialOverlay",
        "DrawMotionBlur",
        "DrawSharpen",
        "DrawSobel",
        "DrawTexturize",
        "DrawToyTown",
        "DrawSunbeams",
        "EyePos",
        "EyeAngles",
        "Error",
        "Entity",
        "ErrorNoHalt",
        "EmitSound",
        "error",
        "Either",
        "EmitSentence",
        "EndTooltip",
        "EyeVector",
        "FrameTime",
        "FrameNumber",
        "FindMetaTable",
        "Format",
        "GetConVar",
        "FindTooltip",
        "GameDetails",
        "getfenv",
        "GetGlobalFloat",
        "GetGlobalAngle",
        "GetGlobalBool",
        "GetGlobalEntity",
        "GetDefaultLoadingHTML",
        "GetDownloadables",
        "GetDemoFileDetails",
        "getmetatable",
        "GetHostName",
        "GetGlobalInt",
        "GetHUDPanel",
        "GetGlobalString",
        "GetGlobalVector",
        "GetOverlayPanel",
        "GetLoadPanel",
        "GetLoadStatus",
        "GetMapList",
        "HTTP",
        "HSVToColor",
        "GetRenderTargetEx",
        "GetRenderTarget",
        "include",
        "ipairs",
        "GetViewEntity",
        "GetSaveFileDetails",
        "HSLToColor",
        "IsEntity",
        "IsFirstTimePredicted",
        "isangle",
        "isbool",
        "isentity",
        "isfunction",
        "IsEnemyEntityName",
        "IsFriendEntityName",
        "IsColor",
        "IsInGame",
        "IsValid",
        "IsMounted",
        "isnumber",
        "isstring",
        "istable",
        "isvector",
        "ispanel",
        "IsTableOfEntitiesValid",
        "IsUselessModel",
        "ismatrix",
        "Label",
        "Lerp",
        "JS_Language",
        "LerpAngle",
        "LerpVector",
        "JS_Utility",
        "JoinServer",
        "LanguageChanged",
        "JS_Workshop",
        "LocalPlayer",
        "Msg",
        "Mesh",
        "Matrix",
        "Material",
        "Model",
        "Localize",
        "LocalToWorld",
        "module",
        "LoadPresets",
        "MsgN",
        "MsgC",
        "next",
        "MsgAll",
        "NamedColor",
        "NumModelSkins",
        "newproxy",
        "OpenFolder",
        "NumDownloadables",
        "pcall",
        "Player",
        "pairs",
        "ParticleEmitter",
        "ParticleEffect",
        "ParticleEffectAttach",
        "OrderVectors",
        "PositionSpawnIcon",
        "Path",
        "Particle",
        "print",
        "PrintTable",
        "PrintMessage",
        "PrecacheParticleSystem",
        "PrecacheScene",
        "PrecacheSentenceFile",
        "PrecacheSentenceGroup",
        "ProtectedCall",
        "RandomPairs",
        "ProjectedTexture",
        "RealTime",
        "RecipientFilter",
        "rawequal",
        "rawget",
        "rawset",
        "RealFrameTime",
        "RegisterDermaMenuForClose",
        "RememberCursorPosition",
        "RemoveTooltip",
        "RunString",
        "RunStringEx",
        "RunConsoleCommand",
        "require",
        "RenderAngles",
        "RenderDoF",
        "RenderStereoscopy",
        "RenderSuperDoF",
        "RestoreCursorPosition",
        "RunGameUICommand",
        "ScrH",
        "ScrW",
        "select",
        "ServerLog",
        "ScreenScale",
        "SafeRemoveEntity",
        "SafeRemoveEntityDelayed",
        "SavePresets",
        "SetClipboardText",
        "setmetatable",
        "SetGlobalInt",
        "setfenv",
        "SetGlobalAngle",
        "SetGlobalBool",
        "SetGlobalEntity",
        "SetGlobalFloat",
        "SetGlobalString",
        "SetGlobalVector",
        "Sound",
        "SoundDuration",
        "SuppressHostEvents",
        "SQLStr",
        "STNDRD",
        "SetPhysConstraintSystem",
        "SortedPairs",
        "SortedPairsByMemberValue",
        "SortedPairsByValue",
        "SysTime",
        "tostring",
        "tobool",
        "tonumber",
        "TauntCamera",
        "TextEntryLoseFocus",
        "TimedCos",
        "TimedSin",
        "ToggleFavourite",
        "unpack",
        "type",
        "Vector",
        "VGUIFrameTime",
        "TypeID",
        "VectorRand",
        "UnPredictedCurTime",
        "UpdateLoadPanel",
        "xpcall",
        "WorldToLocal",
        "VGUIRect",
        "VisualizeLayout",
        "FCVAR_ARCHIVE",
        "FCVAR_REPLICATED",
        "SERVER",
        "CLIENT",
        "HUD_PRINTCONSOLE",
        "isplayer",
        "NOTIFY_ERROR",
        "TOP",
        "BOTTOM",
        "TEXT_ALIGN_LEFT",
        "DLabel",
        "FORCE_NUMBER",
    }
}

std = "min+gmod+wuma+optionals"